[globalOptions]
# Please set the pcrglobwb output directory (outputDir) in an absolute path.
# - Please make sure that you have access to it. 
outputDir = /scratch/carde003/WaterUse/deleteme

# Please set the clone map file (cloneMap), which defines the spatial resolution and extent of your study area.
# - Please make sure that the file is stored locally in your computing machine.
# - The file must be in the pcraster format.
cloneMap    = /scratch/carde003/SWQ/ChaoPhraya/mask_chaophraya.map

# Set the input directory map in an absolute path. The input forcing and parameter directories and files will be relative to this.
# - The following is an example using files from the opendap server.
#~ inputDir = https://opendap.4tu.nl/thredds/dodsC/data2/pcrglobwb/version_2019_11_beta/pcrglobwb2_input/
# - The following is an example using input files stored locally in your computing machine.
#~ inputDir = /quanta1/home/hydrowld/data/hydroworld/pcrglobwb2_input_release/version_2019_11_beta/pcrglobwb2_input/
# - on velocity
inputDir    = /data/hydroworld/pcrglobwb2_input_release/version_2019_11_beta_extended/pcrglobwb2_input/

# The area/landmask of interest:
# If None, area/landmask is limited for cells with ldd value. 
landmask    = /scratch/carde003/SWQ/ChaoPhraya/mask_chaophraya.map

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB 2 output, with human factors (non-natural)
description = PCR-GLOBWB run with human factors (non-natural) at 5 arcmin resolution

# Format: YYYY-MM-DD ; The model runs on daily time step.
startTime = 2010-01-01
endTime   = 2010-01-31

# spinning up options:
maxSpinUpsInYears = 0
minConvForSoilSto = 0.0
minConvForGwatSto = 0.0
minConvForChanSto = 0.0
minConvForTotlSto = 0.0


[meteoOptions]
# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = global_30min/meteo/forcing/daily_precipitation_cru_era-interim_1979_to_2010.nc
temperatureNC   = global_30min/meteo/forcing/daily_temperature_cru_era-interim_1979_to_2010.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
referenceETPotMethod = Input
refETPotFileNC  = global_30min/meteo/forcing/daily_referencePotET_cru_era-interim_1979_to_2010.nc


[meteoDownscalingOptions]
# This section is for a 5 arcmin run, for downscaling meteorological forcing at 30 arcmin to 5 arcmin.
downscalePrecipitation  = False
downscaleTemperature    = True
downscaleReferenceETPot = False

# Downscaling (based on the digital elevation model):
# the downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells.
meteoDownscaleIds = global_05min/meteo/downscaling_from_30min/uniqueIds_30min.nc
highResolutionDEM = global_05min/meteo/downscaling_from_30min/gtopo05min.nc

# lapse rates:
temperLapseRateNC = global_05min/meteo/downscaling_from_30min/temperature_slope.nc
precipLapseRateNC = global_05min/meteo/downscaling_from_30min/precipitation_slope.nc

# downscaling criteria (TODO: remove these):
temperatCorrelNC  = global_05min/meteo/downscaling_from_30min/temperature_correl.nc
precipitCorrelNC  = global_05min/meteo/downscaling_from_30min/precipitation_correl.nc

# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):
smoothingWindowsLength = 0


[landSurfaceOptions]
debugWaterBalance = True
numberOfUpperSoilLayers = 2

# Soil and parameters
# - they are used for all land cover types, unless they are defined in certain land cover type options
#   (e.g. different/various soil types for agriculture areas)
topographyNC     = global_05min/landSurface/topography/topography_parameters_5_arcmin_october_2015.nc
soilPropertiesNC = global_05min/landSurface/soil/soilProperties5ArcMin.nc

# Irrigation properties
includeIrrigation = True

# - netcdf time series for historical expansion of irrigation areas (unit: hectares).
#   (note: The resolution of this map must be consisten with the resolution of cellArea)
historicalIrrigationArea = global_05min/waterUse/irrigation/irrigated_areas/irrigationArea05ArcMin.nc

# - pcraster map/value defining irrigation efficiency (dimensionless) - optional
irrigationEfficiency     = global_30min/waterUse/irrigation/irrigation_efficiency/efficiency.nc

# Water demands: domestic, industrial and livestock water demand data (unit must be in m.day-1)
naturalisedConditions = None
includeDomesticWaterDemand  = True
includeIndustryWaterDemand  = True
includeLivestockWaterDemand = True

domesticWaterDemandFile  = global_05min/waterUse/waterDemand/domestic/domestic_water_demand_version_april_2015.nc
industryWaterDemandFile  = global_05min/waterUse/waterDemand/industry/industry_water_demand_version_april_2015.nc
livestockWaterDemandFile = global_05min/waterUse/waterDemand/livestock/livestock_water_demand_version_april_2015.nc

# Desalination water supply (maximum/potential/capacity)
desalinationWater = global_05min/waterUse/desalination/desalination_water_version_april_2015.nc

# Pooling zones: zone IDs (scale) at which allocations of groundwater and surface water (as well as desalinated water) are performed  
allocationSegmentsForGroundSurfaceWater = global_05min/waterUse/abstraction_zones/abstraction_zones_60min_05min.nc

# pcraster maps defining the partitioning of groundwater - surface water source
# - predefined surface water - groundwater partitioning for irrigation demand (e.g. based on Siebert, Global Map of Irrigation Areas version 5)
irrigationSurfaceWaterAbstractionFractionData           = global_05min/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_SWFRAC.nc
# -- quality map
irrigationSurfaceWaterAbstractionFractionDataQuality    = global_05min/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_QUAL.nc

# - threshold values defining the preference for surface water source for irrigation purpose
# -- treshold to maximize surface water irrigation use (cells with irrSurfaceWaterAbstractionFraction above this will prioritize irrigation surface water use)
treshold_to_maximize_irrigation_surface_water           = 0.50
# -- treshold to minimize fossil water withdrawal for irrigation (cells with irrSurfaceWaterAbstractionFraction below this have no fossil withdrawal for irrigation)
treshold_to_minimize_fossil_groundwater_irrigation      = 0.70

# - predefined surface water - groundwater partitioning for non irrigation demand (e.g. based on McDonald, 2014)
maximumNonIrrigationSurfaceWaterAbstractionFractionData = global_30min/waterUse/source_partitioning/surface_water_fraction_for_non_irrigation/max_city_sw_fraction.nc


[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = global_05min/landSurface/landCover/naturalTall/cropCoefficientForest.nc
interceptCapNC    = global_05min/landSurface/landCover/naturalTall/interceptCapInputForest.nc
coverFractionNC   = global_05min/landSurface/landCover/naturalTall/coverFractionInputForest.nc

landCoverMapsNC   = None

# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = global_05min/landSurface/landCover/naturalTall/vegf_tall.nc
minSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/minf_tall_permafrost.nc
maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/maxf_tall.nc
rootFraction1     = global_05min/landSurface/landCover/naturalTall/rfrac1_tall.nc
rootFraction2     = global_05min/landSurface/landCover/naturalTall/rfrac2_tall.nc	
maxRootDepth      = 1.0
# Note: The maxRootDepth is not used for non irrigated land cover type. 	

# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = global_05min/initialConditions/non-natural/1999/interceptStor_forest_1999-12-31.nc
snowCoverSWEIni  = global_05min/initialConditions/non-natural/1999/snowCoverSWE_forest_1999-12-31.nc
snowFreeWaterIni = global_05min/initialConditions/non-natural/1999/snowFreeWater_forest_1999-12-31.nc
topWaterLayerIni = global_05min/initialConditions/non-natural/1999/topWaterLayer_forest_1999-12-31.nc
storUppIni       = global_05min/initialConditions/non-natural/1999/storUpp_forest_1999-12-31.nc
storLowIni       = global_05min/initialConditions/non-natural/1999/storLow_forest_1999-12-31.nc
interflowIni     = global_05min/initialConditions/non-natural/1999/interflow_forest_1999-12-31.nc


[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2

cropCoefficientNC = global_05min/landSurface/landCover/naturalShort/cropCoefficientGrassland.nc
interceptCapNC    = global_05min/landSurface/landCover/naturalShort/interceptCapInputGrassland.nc
coverFractionNC   = global_05min/landSurface/landCover/naturalShort/coverFractionInputGrassland.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following values:
fracVegCover      = global_05min/landSurface/landCover/naturalShort/vegf_short.nc
minSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/minf_short_permafrost.nc
maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/maxf_short.nc
rootFraction1     = global_05min/landSurface/landCover/naturalShort/rfrac1_short.nc
rootFraction2     = global_05min/landSurface/landCover/naturalShort/rfrac2_short.nc	
maxRootDepth      = 0.5
# Note: The maxRootDepth is not used for non irrigated land cover type.

# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = global_05min/initialConditions/non-natural/1999/interceptStor_grassland_1999-12-31.nc
snowCoverSWEIni  = global_05min/initialConditions/non-natural/1999/snowCoverSWE_grassland_1999-12-31.nc
snowFreeWaterIni = global_05min/initialConditions/non-natural/1999/snowFreeWater_grassland_1999-12-31.nc
topWaterLayerIni = global_05min/initialConditions/non-natural/1999/topWaterLayer_grassland_1999-12-31.nc
storUppIni       = global_05min/initialConditions/non-natural/1999/storUpp_grassland_1999-12-31.nc
storLowIni       = global_05min/initialConditions/non-natural/1999/storLow_grassland_1999-12-31.nc
interflowIni     = global_05min/initialConditions/non-natural/1999/interflow_grassland_1999-12-31.nc


[irrPaddyOptions]
name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# land cover map
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = global_05min/landSurface/landCover/irrPaddy/fractionPaddy.nc
minSoilDepthFrac = global_30min/landSurface/landCover/irrPaddy/minf_paddy_permafrost.nc
maxSoilDepthFrac = global_30min/landSurface/landCover/irrPaddy/maxf_paddy.nc
rootFraction1    = global_30min/landSurface/landCover/irrPaddy/rfrac1_paddy.nc
rootFraction2    = global_30min/landSurface/landCover/irrPaddy/rfrac2_paddy.nc
maxRootDepth     = 0.5

# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
cropDeplFactor   = 0.2
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min/landSurface/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

# initial conditions:
interceptStorIni = global_05min/initialConditions/non-natural/1999/interceptStor_irrPaddy_1999-12-31.nc
snowCoverSWEIni  = global_05min/initialConditions/non-natural/1999/snowCoverSWE_irrPaddy_1999-12-31.nc
snowFreeWaterIni = global_05min/initialConditions/non-natural/1999/snowFreeWater_irrPaddy_1999-12-31.nc
topWaterLayerIni = global_05min/initialConditions/non-natural/1999/topWaterLayer_irrPaddy_1999-12-31.nc
storUppIni       = global_05min/initialConditions/non-natural/1999/storUpp_irrPaddy_1999-12-31.nc
storLowIni       = global_05min/initialConditions/non-natural/1999/storLow_irrPaddy_1999-12-31.nc
interflowIni     = global_05min/initialConditions/non-natural/1999/interflow_irrPaddy_1999-12-31.nc


[irrNonPaddyOptions]
name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = global_05min/landSurface/landCover/irrNonPaddy/fractionNonPaddy.nc
minSoilDepthFrac = global_30min/landSurface/landCover/irrNonPaddy/minf_nonpaddy_permafrost.nc
maxSoilDepthFrac = global_30min/landSurface/landCover/irrNonPaddy/maxf_nonpaddy.nc
rootFraction1    = global_30min/landSurface/landCover/irrNonPaddy/rfrac1_nonpaddy.nc
rootFraction2    = global_30min/landSurface/landCover/irrNonPaddy/rfrac2_nonpaddy.nc
maxRootDepth     = 1.0

# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
cropDeplFactor   = 0.5
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min/landSurface/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:
interceptStorIni = global_05min/initialConditions/non-natural/1999/interceptStor_irrNonPaddy_1999-12-31.nc
snowCoverSWEIni  = global_05min/initialConditions/non-natural/1999/snowCoverSWE_irrNonPaddy_1999-12-31.nc
snowFreeWaterIni = global_05min/initialConditions/non-natural/1999/snowFreeWater_irrNonPaddy_1999-12-31.nc
topWaterLayerIni = global_05min/initialConditions/non-natural/1999/topWaterLayer_irrNonPaddy_1999-12-31.nc
storUppIni       = global_05min/initialConditions/non-natural/1999/storUpp_irrNonPaddy_1999-12-31.nc
storLowIni       = global_05min/initialConditions/non-natural/1999/storLow_irrNonPaddy_1999-12-31.nc
interflowIni     = global_05min/initialConditions/non-natural/1999/interflow_irrNonPaddy_1999-12-31.nc



[groundwaterOptions]
debugWaterBalance = True

# The file will containspecificYield (m3.m-3), kSatAquifer (m.day-1), recessionCoeff (day-1)
groundwaterPropertiesNC = global_05min/groundwater/properties/groundwaterProperties5ArcMin.nc
# - minimum value for groundwater recession coefficient (day-1) 
minRecessionCoeff = 1.0e-4

# some options for constraining groundwater abstraction
limitFossilGroundWaterAbstraction      = True
estimateOfRenewableGroundwaterCapacity = 0.0
estimateOfTotalGroundwaterThickness    = global_05min/groundwater/aquifer_thickness_estimate/thickness_05min.nc

# minimum and maximum total groundwater thickness 
minimumTotalGroundwaterThickness       = 100.
maximumTotalGroundwaterThickness       = None

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
pumpingCapacityNC = global_30min/waterUse/groundwater_pumping_capacity/regional_abstraction_limit.nc

# initial conditions:
storGroundwaterIni                        = global_05min/initialConditions/non-natural/1999/storGroundwater_1999-12-31.nc
storGroundwaterFossilIni                  = global_05min/initialConditions/non-natural/1999/storGroundwaterFossil_1999-12-31.nc

# additional initial conditions for pumping behaviors
avgNonFossilGroundwaterAllocationLongIni  = global_05min/initialConditions/non-natural/1999/avgNonFossilGroundwaterAllocationLong_1999-12-31.nc
avgNonFossilGroundwaterAllocationShortIni = global_05min/initialConditions/non-natural/1999/avgNonFossilGroundwaterAllocationShort_1999-12-31.nc
avgTotalGroundwaterAbstractionIni         = global_05min/initialConditions/non-natural/1999/avgTotalGroundwaterAbstraction_1999-12-31.nc
avgTotalGroundwaterAllocationLongIni      = global_05min/initialConditions/non-natural/1999/avgTotalGroundwaterAllocationLong_1999-12-31.nc
avgTotalGroundwaterAllocationShortIni     = global_05min/initialConditions/non-natural/1999/avgTotalGroundwaterAllocationShort_1999-12-31.nc

# additional initial conditions (needed only for MODFLOW run) 
relativeGroundwaterHeadIni                = global_05min/initialConditions/non-natural/1999/relativeGroundwaterHead_1999-12-31.nc
baseflowIni                               = global_05min/initialConditions/non-natural/1999/baseflow_1999-12-31.nc

# zonal IDs (scale) at which zonal allocation of groundwater is performed  
allocationSegmentsForGroundwater = global_05min/waterUse/abstraction_zones/abstraction_zones_30min_05min.nc



[routingOptions]
debugWaterBalance = True

# drainage direction map
lddMap      = global_05min/routing/ldd_and_cell_area/lddsound_05min.nc

# cell area (unit: m2)
cellAreaMap = global_05min/routing/ldd_and_cell_area/cellsize05min.correct.nc

# routing method:
routingMethod     = accuTravelTime
#~ routingMethod  = kinematicWave

# manning coefficient
manningsN   = 0.04

# Option for flood plain simulation
dynamicFloodPlain = True

# manning coefficient for floodplain
floodplainManningsN = 0.07

# channel gradient
gradient             = global_05min/routing/channel_properties/channel_gradient.nc

# constant channel depth 
constantChannelDepth = global_05min/routing/channel_properties/bankfull_depth.nc

# constant channel width (optional)
constantChannelWidth = global_05min/routing/channel_properties/bankfull_width.nc

# minimum channel width (optional)
minimumChannelWidth  = global_05min/routing/channel_properties/bankfull_width.nc

# channel properties for flooding
# - if None, it will be estimated from (bankfull) channel depth (m) and width (m) 
bankfullCapacity     = None

# files for relative elevation (above minimum dem) 
relativeElevationFiles  = global_05min/routing/channel_properties/dzRel%04d.nc
relativeElevationLevels = 0.0, 0.01, 0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.00

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = global_30min/routing/kc_surface_water/cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00

# lake and reservoir parameters
waterBodyInputNC       = global_05min/routing/surface_water_bodies/waterBodies5ArcMin.nc
onlyNaturalWaterBodies = False

# initial conditions:
waterBodyStorageIni           = global_05min/initialConditions/non-natural/1999/waterBodyStorage_1999-12-31.nc
channelStorageIni             = global_05min/initialConditions/non-natural/1999/channelStorage_1999-12-31.nc
readAvlChannelStorageIni      = global_05min/initialConditions/non-natural/1999/readAvlChannelStorage_1999-12-31.nc
avgDischargeLongIni           = global_05min/initialConditions/non-natural/1999/avgDischargeLong_1999-12-31.nc
avgDischargeShortIni          = global_05min/initialConditions/non-natural/1999/avgDischargeShort_1999-12-31.nc
m2tDischargeLongIni           = global_05min/initialConditions/non-natural/1999/m2tDischargeLong_1999-12-31.nc
avgBaseflowLongIni             = global_05min/initialConditions/non-natural/1999/avgBaseflowLong_1999-12-31.nc
riverbedExchangeIni           = global_05min/initialConditions/non-natural/1999/riverbedExchange_1999-12-31.nc

# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni               = global_05min/initialConditions/non-natural/1999/subDischarge_1999-12-31.nc

avgLakeReservoirInflowShortIni = global_05min/initialConditions/non-natural/1999/avgLakeReservoirInflowShort_1999-12-31.nc
avgLakeReservoirOutflowLongIni = global_05min/initialConditions/non-natural/1999/avgLakeReservoirOutflowLong_1999-12-31.nc

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni    = global_05min/initialConditions/non-natural/1999/timestepsToAvgDischarge_1999-12-31.nc
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)



[reportingOptions]
# output files that will be written in the disk in netcdf files:
# - daily resolution (discharge,totalRunoff,gwRecharge,totalGroundwaterAbstraction,surfaceWaterStorage)
outDailyTotNC = None

# - monthly resolution
# (outMonthTotNC: actualET,runoff,totalRunoff,baseflow,directRunoff,interflowTotal,,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,precipitation,gwRecharge,surfaceWaterInf,referencePotET,totalEvaporation,totalPotentialEvaporation,totLandSurfaceActuaET,totalLandSurfacePotET,waterBodyActEvaporation,waterBodyPotEvaporation)
# (outMonthAvgNC: temperature,dynamicFracWat,surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalActiveStorageThickness,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage)
# (outMonthEndNC: storGroundwater,storGroundwaterFossil,waterBodyStorage,channelStorage,totalWaterStorageThickness,totalActiveStorageThickness)
outMonthTotNC = irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,totalGroundwaterAbstraction,desalinationAbstraction,surfaceWaterAbstraction
outMonthAvgNC = discharge
outMonthEndNC = None

# - annual resolution
# (outAnnuaTotNC: totalEvaporation,precipitation,gwRecharge,totalRunoff,baseflow,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,totalGroundwaterAbstraction,totalAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,runoff,actualET,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,irrigationWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,precipitation_at_irrigation,netLqWaterToSoil_at_irrigation,evaporation_from_irrigation,transpiration_from_irrigation,referencePotET)
# (outAnnuaAvgNC: temperature,discharge,surfaceWaterStorage,waterBodyStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage,fractionWaterBodyEvaporation,fractionTotalEvaporation,fracSurfaceWaterAllocation,fracDesalinatedWaterAllocation,gwRecharge)
# (outAnnuaEndNC: surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness)
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None

# - monthly and annual maxima (channelStorage,dynamicFracWat,floodVolume,floodDepth,surfaceWaterLevel,discharge,totalRunoff)
outMonthMaxNC = None
outAnnuaMaxNC = None

# netcdf format and zlib setup
formatNetCDF = NETCDF4
zlib = True
