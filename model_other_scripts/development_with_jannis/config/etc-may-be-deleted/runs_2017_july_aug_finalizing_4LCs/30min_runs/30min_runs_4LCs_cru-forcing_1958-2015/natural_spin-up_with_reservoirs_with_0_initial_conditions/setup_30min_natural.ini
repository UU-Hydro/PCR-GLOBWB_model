[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
inputDir = /home/edwinhs/data/PCR-GLOBWB_input/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap = others/RhineMeuse/RhineMeuse30min.clone.map
#~ cloneMap = others/Mississippi/Mississippi30min.clone.map
cloneMap = others/Global/Global_CloneMap_30min.map

# The area/landmask of interest:
landmask = None
# If None, area/landmask is limited for cells with ldd value. 

# Set the output directory in an absolute path.
outputDir = /scratch-shared/edwin/30min_sensitivity_analysis_non_natural/2016_02_XX/

# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output
description = This run is part of the sensitivity analyses performed by Edwin H. Sutanudjaja on January 2016 

startTime = 1958-01-01
endTime   = 2010-12-31
# Format: YYYY-MM-DD ; The current model runs on the daily time step.

# spinning up options:
maxSpinUpsInYears = 15
minConvForSoilSto = 0.0
minConvForGwatSto = 0.0
minConvForChanSto = 0.0
minConvForTotlSto = 0.0

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_precipitation_1958_to_2010.nc
temperatureNC   = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_temperature_1958_to_2010.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Input
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC = forcing/CRU-TS3.21/merged_1958_to_2010/CRU-TS3.21_ERA-40_ERA-Interim_daily_referencePotET_1958_to_2010.nc

[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 2

# soil and parameters
# - they are used for all land cover types, unless they are are defined in certain land cover type options 
#   (e.g. different/various soil types for agriculture areas)  
topographyNC     = PCRGLOBWB20/input30min/landSurface/topo/topoProperties.nc
soilPropertiesNC = PCRGLOBWB20/input30min/landSurface/soil/soilProperties.nc

includeIrrigation = True

# a pcraster map/value defining irrigation efficiency (dimensionless) - optional
irrigationEfficiency = PCRGLOBWB20/input30min/landSurface/waterDemand/efficiency/efficiency.map

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
historicalIrrigationArea = PCRGLOBWB20/input30min/landSurface/waterDemand/irrigated_areas/irrigationArea30ArcMin.nc

includeDomesticWaterDemand  = True
includeIndustryWaterDemand  = True
includeLivestockWaterDemand = True

# domestic and industrial water demand data (unit must be in m.day-1)
domesticWaterDemandFile  = /projects/0/dfguu/users/edwin/data/data_from_yoshi/water_demand/water_demand_in_m_per_day/domestic_water_demand_version_october_2014.nc
industryWaterDemandFile  = /projects/0/dfguu/users/edwin/data/data_from_yoshi/water_demand/water_demand_in_m_per_day/industrial_water_demand_version_october_2014.nc
livestockWaterDemandFile = /projects/0/dfguu/users/edwin/data/data_from_yoshi/water_demand/water_demand_in_m_per_day/from_stefanie/livestock_water_demand_1960-2012.nc

# desalination water supply (maximum/potential/capacity, unit: m.day-1)
desalinationWater = /projects/0/dfguu/users/edwin/data/data_from_yoshi/desalination/desalination_in_m_per_day/desalination_water_use_version_october_2014.nc

# zone IDs (scale) at which allocations of groundwater and surface water (as well as desalinated water) are performed  
allocationSegmentsForGroundSurfaceWater = others/irrigationZones/one_arc_degree/uniqueIds60min.nom.map

# pcraster maps defining the partitioning of groundwater - surface water source to minimize  
# - predefined surface water - groundwater partitioning for irrigation demand (based on Siebert, 2010/2013: Global Map of Irrigation Areas version 5)
irrigationSurfaceWaterAbstractionFractionData        = /projects/0/dfguu/users/edwin/data/siebert_map/30min/AEI_SWFRAC.map
irrigationSurfaceWaterAbstractionFractionDataQuality = /projects/0/dfguu/users/edwin/data/siebert_map/30min/AEI_QUAL.map
# - predefined surface water - groundwater partitioning for irrigation demand (based on McDonald, 2014)
maximumNonIrrigationSurfaceWaterAbstractionFractionData = /projects/0/dfguu/users/edwin/data/McDonald_water_infrastructure/max_city_sw_fraction.map
# threshold values defining the preference for surface water source for irrigation purpose
# - treshold to maximize surface water irrigation use (cells with irrSurfaceWaterAbstractionFraction above this will prioritize irrigation surface water use)
treshold_to_maximize_irrigation_surface_water = 0.50
# - treshold to minimize fossil water withdrawal for irrigation (cells with irrSurfaceWaterAbstractionFraction below this have no fossil withdrawal for irrigation)
treshold_to_minimize_fossil_groundwater_irrigation = 0.70

[forestOptions]

name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2

landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/forest/forestProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/forest/Global_CropCoefficientKc-Forest_30min.nc
interceptCapNC    = PCRGLOBWB20/input30min/landCover/forest/interceptCapInputForest366days.nc
coverFractionNC   = PCRGLOBWB20/input30min/landCover/forest/coverFractionInputForest366days.nc

# initial conditions:
interceptStorIni = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/interceptStor_forest_initial.map
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/topWaterLayer_forest_initial.map
storUppIni       = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/storUpp_forest_initial.map
storLowIni       = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/storLow_forest_initial.map
interflowIni     = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/interflow_forest_initial.map

[grasslandOptions]

name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2

landCoverMapsNC  = PCRGLOBWB20/input30min/landCover/grassland/grasslandProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = PCRGLOBWB20/input30min/landCover/grassland/Global_CropCoefficientKc-Grassland_30min.nc
interceptCapNC    = PCRGLOBWB20/input30min/landCover/grassland/interceptCapInputGrassland366days.nc
coverFractionNC   = PCRGLOBWB20/input30min/landCover/grassland/coverFractionInputGrassland366days.nc

# initial conditions:
interceptStorIni = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/interceptStor_grassland_initial.map
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/topWaterLayer_grassland_initial.map
storUppIni       = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/storUpp_grassland_initial.map
storLowIni       = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/storLow_grassland_initial.map
interflowIni     = /scratch-shared/edwin/debug_30min_5_aug_2015/initial_conditions/interflow_grassland_initial.map

[groundwaterOptions]

debugWaterBalance = True

# a netcdf file containing kSatAquifer (m/day), specificYield (dimensionless) and recessionCoeff (day-1) 
groundwaterPropertiesNC = input30min/groundwater/aquifer_properties/groundwaterProperties.nc

# minimum groundwater recession coefficient (day-1)
minRecessionCoeff = 1.0e-4

# some options for constraining groundwater abstraction
limitFossilGroundWaterAbstraction      = True
estimateOfTotalGroundwaterThickness    = input30min/groundwater/aquifer_properties/thickness_30min.map
estimateOfRenewableGroundwaterCapacity = 0.0
# minimum and maximum total groundwater thickness 
minimumTotalGroundwaterThickness       = 100.
maximumTotalGroundwaterThickness       = None

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
pumpingCapacityNC = input30min/groundwater/design_pumping_capacity/regional_abstraction_limit.nc

# initial conditions:
storGroundwaterIni                        = 0.0
storGroundwaterFossilIni                  = Maximum
#
avgNonFossilGroundwaterAllocationLongIni  = 0.0
avgNonFossilGroundwaterAllocationShortIni = 0.0
avgTotalGroundwaterAbstractionIni         = 0.0
avgTotalGroundwaterAllocationLongIni      = 0.0
avgTotalGroundwaterAllocationShortIni     = 0.0

allocationSegmentsForGroundwater = None

# assumption for the minimum transmissivity value (unit: m2/day) that can be extracted (via capillary rise and/or groundwater abstraction) 
minTransimissivityForProductiveAquifer = 50.0
# - if None, abstraction and/or capillary rise can always occur everywhere and unlimited

[routingOptions]

debugWaterBalance = True

lddMap      = input30min/routing/lddsound_30min.map
cellAreaMap = input30min/routing/cellarea30min.map
gradient    = input30min/routing/Global_ChannelGradient-RVB_30min.map

# manning coefficient
manningsN   = 0.04

# routing method: (options are kinematicWave, simplifiedKinematicWave and accuTravelTime)
routingMethod = accuTravelTime

# lake and reservoir parameters
onlyNaturalWaterBodies = False
waterBodyInputNC       = input30min/routing/waterBodies/waterBodies30min.nc

# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = input30min/routing/cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = 0.0
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
waterBodyStorageIni            = 0.0
channelStorageIni              = 0.0
readAvlChannelStorageIni       = 0.0
avgDischargeLongIni            = 0.0
avgDischargeShortIni           = 0.0
m2tDischargeLongIni            = 0.0
avgBaseflowLongIni             = 0.0
riverbedExchangeIni            = 0.0
avgLakeReservoirInflowShortIni = 0.0
avgLakeReservoirOutflowLongIni = 0.0
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = 0.0

[reportingOptions]
# output files that will be written in the disk in netcdf files:
outDailyTotNC = None
outMonthTotNC = gwRecharge,totalGroundwaterAbstraction,totalRunoff,baseflow,totalEvaporation,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,runoff,actualET,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,irrigationWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal
outMonthAvgNC = accuBaseflow,discharge,gwRecharge,totalGroundwaterAbstraction,totalRunoff,snowCoverSWE,fractionTotalEvaporation,fracSurfaceWaterAllocation,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness,satDegUpp,satDegLow,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal
outMonthEndNC = storGroundwater,storGroundwaterFossil,totalActiveStorageThickness,totalWaterStorageThickness
outAnnuaTotNC = precipitation,gwRecharge,totalRunoff,baseflow,totalEvaporation,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,totalGroundwaterAbstraction,totalAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,runoff,actualET,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,irrigationWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,irrigationWaterWithdrawalVolume,domesticWaterWithdrawalVolume,industryWaterWithdrawalVolume,livestockWaterWithdrawalVolume,totalGroundwaterAbstractionVolume,surfaceWaterAbstractionVolume,desalinationAbstractionVolume,irrGrossDemandVolume,nonIrrGrossDemandVolume,totalGrossDemandVolume
outAnnuaAvgNC = temperature,accuBaseflow,storGroundwater,storGroundwaterFossil,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness,discharge,fractionTotalEvaporation
outAnnuaEndNC = storGroundwater,storGroundwaterFossil,storGroundwaterTotal,totalActiveStorageThickness,totalWaterStorageThickness
# netcdf format and zlib setup
formatNetCDF = NETCDF4
zlib = True
