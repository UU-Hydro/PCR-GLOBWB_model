[globalOptions]

# Set the pcrglobwb output directory in an absolute path.
outputDir    = /scratch-shared/edwinhs/finalize_for_jannis_with_modflow/java/

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories and files will be relative to this.
inputDir     = /projects/0/dfguu/data/hydroworld/pcrglobwb2_input_release/latest_release/pcrglobwb2_input/


# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap  = global_05min/routing/ldd_and_cell_area/lddsound_05min.map
#~ cloneMap  = /projects/0/dfguu/data/hydroworld/others/RhineMeuse/RhineMeuse05min.clone.map
cloneMap     = /projects/0/dfguu/data/hydroworld/others/Java/Java05min.clone.map
#~ cloneMap  = /projects/0/dfguu/data/hydroworld/others/05ArcMinCloneMaps/new_masks_from_top/clone_M13.map
#~ cloneMap  = /projects/0/dfguu/data/hydroworld/others/Niger/clone_niger_05min.map

# The area/landmask of interest:
# If None, area/landmask is limited for cells with ldd value. 
landmask     = None
#~ landmask  = /projects/0/dfguu/data/hydroworld/others/Niger/landmask_niger_05min.map


# netcdf attributes for output files:
institution  = Department of Physical Geography, Utrecht University
title        = PCR-GLOBWB 2 output (coupled to MODFLOW)
description  = by Edwin H. Sutanudjaja (contact: e.h.sutanudjaja@uu.nl) 

startTime = 2000-01-01
endTime   = 2010-12-31
# Format: YYYY-MM-DD ; The model runs on daily time step.


# spinning up options:
maxSpinUpsInYears = 0
minConvForSoilSto = 0.0
minConvForGwatSto = 0.0
minConvForChanSto = 0.0
minConvForTotlSto = 0.0



[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = global_30min/meteo/forcing/daily_precipitation_cru_era-interim_2000_to_2010.nc4
temperatureNC   = global_30min/meteo/forcing/daily_temperature_cru_era-interim_2000_to_2010.nc4

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
referenceETPotMethod = Input
refETPotFileNC  = global_30min/meteo/forcing/daily_referencePotET_cru_era-interim_2000_to_2010.nc4

[meteoDownscalingOptions]
# This section is for a 5 arcmin run, for downscaling meteorological forcing at 30 arcmin to 5 arcmin.  
                                                                                                                                        
downscalePrecipitation  = False                                                                                                                                   
downscaleTemperature    = True                                                                                                                                   
downscaleReferenceETPot = False                                                                                                                                   
   
# downscaling (based on the digital elevation model):                                                                                                            
# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells.                                                    
meteoDownscaleIds = global_05min/meteo/downscaling_from_30min/uniqueIds_30min.map                                                                      
highResolutionDEM = global_05min/meteo/downscaling_from_30min/gtopo05min.map                                                                           
   
# lapse rates:                                                                                                                                                   
temperLapseRateNC = global_05min/meteo/downscaling_from_30min/temperature_slope.nc                                                                     
precipLapseRateNC = global_05min/meteo/downscaling_from_30min/precipitation_slope.nc                                                                   
                                                                                                                                                                 
# downscaling criteria (TODO: remove these):                                                                                                                     
temperatCorrelNC  = global_05min/meteo/downscaling_from_30min/temperature_correl.nc                                                                     
precipitCorrelNC  = global_05min/meteo/downscaling_from_30min/precipitation_correl.nc                                                                   
                                                                                                                                                                 
# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):                                                                      
smoothingWindowsLength = 0




[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 2

# soil and topography parameters
# - they are used for all land cover types, unless they are are defined in certain land cover type options 
#   (e.g. different/various soil types for agriculture areas)  
topographyNC     = global_05min/landSurface/topography/topography_parameters_5_arcmin_october_2015.nc
soilPropertiesNC = global_05min/landSurface/soil/soilProperties5ArcMin.nc


includeIrrigation = True

# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consisten with the resolution of cellArea. 
historicalIrrigationArea = global_05min/waterUse/irrigation/irrigated_areas/irrigationArea05ArcMin.nc

# a pcraster map/value defining irrigation efficiency (dimensionless) - optional
irrigationEfficiency     = global_30min/waterUse/irrigation/irrigation_efficiency/efficiency.map


includeDomesticWaterDemand  = True
includeIndustryWaterDemand  = True
includeLivestockWaterDemand = True

# domestic, industrial and livestock water demand data (unit must be in m.day-1)
domesticWaterDemandFile  = global_05min/waterUse/waterDemand/domestic/domestic_water_demand_version_april_2015.nc
industryWaterDemandFile  = global_05min/waterUse/waterDemand/industry/industry_water_demand_version_april_2015.nc
livestockWaterDemandFile = global_05min/waterUse/waterDemand/livestock/livestock_water_demand_version_april_2015.nc


# desalination water supply (maximum/potential/capacity)
desalinationWater = global_05min/waterUse/desalination/desalination_water_version_april_2015.nc


# zone IDs (scale) at which allocations of groundwater and surface water (as well as desalinated water) are performed  
allocationSegmentsForGroundSurfaceWater = global_05min/waterUse/abstraction_zones/abstraction_zones_60min_05min.map

# pcraster maps defining the partitioning of groundwater - surface water source 
#
# - predefined surface water - groundwater partitioning for irrigation demand (e.g. based on Siebert, Global Map of Irrigation Areas version 5)
irrigationSurfaceWaterAbstractionFractionData           = global_05min/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_SWFRAC.map
# -- quality map
irrigationSurfaceWaterAbstractionFractionDataQuality    = global_05min/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_QUAL.map
#
# - threshold values defining the preference for surface water source for irrigation purpose
# -- treshold to maximize surface water irrigation use (cells with irrSurfaceWaterAbstractionFraction above this will prioritize irrigation surface water use)
treshold_to_maximize_irrigation_surface_water           = 0.50
# -- treshold to minimize fossil water withdrawal for irrigation (cells with irrSurfaceWaterAbstractionFraction below this have no fossil withdrawal for irrigation)
treshold_to_minimize_fossil_groundwater_irrigation      = 0.70
#
# - predefined surface water - groundwater partitioning for non irrigation demand (e.g. based on McDonald, 2014)
#~ maximumNonIrrigationSurfaceWaterAbstractionFractionData = global_30min/waterUse/source_partitioning/surface_water_fraction_for_non_irrigation/max_city_sw_fraction.map
maximumNonIrrigationSurfaceWaterAbstractionFractionData    = /projects/0/dfguu/users/edwinhs/data/McDonald_water_infrastructure/version_2018_03_05/city_sw_fraction_version_2018_03_10.map


# output files that will be written in the disk in netcdf files:
outDailyTotNC = openWaterEvap
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None


[forestOptions]

name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = global_05min/landSurface/landCover/naturalTall/cropCoefficientForest.nc
interceptCapNC    = global_05min/landSurface/landCover/naturalTall/interceptCapInputForest.nc
coverFractionNC   = global_05min/landSurface/landCover/naturalTall/coverFractionInputForest.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = global_05min/landSurface/landCover/naturalTall/vegf_tall.map
minSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/minf_tall_permafrost.map
maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalTall/maxf_tall.map
rootFraction1     = global_05min/landSurface/landCover/naturalTall/rfrac1_tall.map
rootFraction2     = global_05min/landSurface/landCover/naturalTall/rfrac2_tall.map	
maxRootDepth      = 1.0
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = global_05min/initialConditions/interceptStor_forest_1999-12-31.map
snowCoverSWEIni  = global_05min/initialConditions/snowCoverSWE_forest_1999-12-31.map
snowFreeWaterIni = global_05min/initialConditions/snowFreeWater_forest_1999-12-31.map
topWaterLayerIni = global_05min/initialConditions/topWaterLayer_forest_1999-12-31.map
storUppIni       = global_05min/initialConditions/storUpp_forest_1999-12-31.map
storLowIni       = global_05min/initialConditions/storLow_forest_1999-12-31.map
interflowIni     = global_05min/initialConditions/interflow_forest_1999-12-31.map


[grasslandOptions]

name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2

cropCoefficientNC = global_05min/landSurface/landCover/naturalShort/cropCoefficientGrassland.nc
interceptCapNC    = global_05min/landSurface/landCover/naturalShort/interceptCapInputGrassland.nc
coverFractionNC   = global_05min/landSurface/landCover/naturalShort/coverFractionInputGrassland.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following values:
fracVegCover      = global_05min/landSurface/landCover/naturalShort/vegf_short.map
minSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/minf_short_permafrost.map
maxSoilDepthFrac  = global_30min/landSurface/landCover/naturalShort/maxf_short.map
rootFraction1     = global_05min/landSurface/landCover/naturalShort/rfrac1_short.map
rootFraction2     = global_05min/landSurface/landCover/naturalShort/rfrac2_short.map	
maxRootDepth      = 0.5
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = global_05min/initialConditions/interceptStor_grassland_1999-12-31.map
snowCoverSWEIni  = global_05min/initialConditions/snowCoverSWE_grassland_1999-12-31.map
snowFreeWaterIni = global_05min/initialConditions/snowFreeWater_grassland_1999-12-31.map
topWaterLayerIni = global_05min/initialConditions/topWaterLayer_grassland_1999-12-31.map
storUppIni       = global_05min/initialConditions/storUpp_grassland_1999-12-31.map
storLowIni       = global_05min/initialConditions/storLow_grassland_1999-12-31.map
interflowIni     = global_05min/initialConditions/interflow_grassland_1999-12-31.map


[irrPaddyOptions]

name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = global_05min/landSurface/landCover/irrPaddy/fractionPaddy.map
minSoilDepthFrac = global_30min/landSurface/landCover/irrPaddy/minf_paddy_permafrost.map
maxSoilDepthFrac = global_30min/landSurface/landCover/irrPaddy/maxf_paddy.map
rootFraction1    = global_30min/landSurface/landCover/irrPaddy/rfrac1_paddy.map
rootFraction2    = global_30min/landSurface/landCover/irrPaddy/rfrac2_paddy.map
maxRootDepth     = 0.5
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
cropDeplFactor   = 0.2
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min/landSurface/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

# initial conditions:
interceptStorIni = global_05min/initialConditions/interceptStor_irrPaddy_1999-12-31.map
snowCoverSWEIni  = global_05min/initialConditions/snowCoverSWE_irrPaddy_1999-12-31.map
snowFreeWaterIni = global_05min/initialConditions/snowFreeWater_irrPaddy_1999-12-31.map
topWaterLayerIni = global_05min/initialConditions/topWaterLayer_irrPaddy_1999-12-31.map
storUppIni       = global_05min/initialConditions/storUpp_irrPaddy_1999-12-31.map
storLowIni       = global_05min/initialConditions/storLow_irrPaddy_1999-12-31.map
interflowIni     = global_05min/initialConditions/interflow_irrPaddy_1999-12-31.map


[irrNonPaddyOptions]

name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = global_05min/landSurface/landCover/irrNonPaddy/fractionNonPaddy.map
minSoilDepthFrac = global_30min/landSurface/landCover/irrNonPaddy/minf_nonpaddy_permafrost.map
maxSoilDepthFrac = global_30min/landSurface/landCover/irrNonPaddy/maxf_nonpaddy.map
rootFraction1    = global_30min/landSurface/landCover/irrNonPaddy/rfrac1_nonpaddy.map
rootFraction2    = global_30min/landSurface/landCover/irrNonPaddy/rfrac2_nonpaddy.map
maxRootDepth     = 1.0
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
cropDeplFactor   = 0.5
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min/landSurface/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:
interceptStorIni = global_05min/initialConditions/interceptStor_irrNonPaddy_1999-12-31.map
snowCoverSWEIni  = global_05min/initialConditions/snowCoverSWE_irrNonPaddy_1999-12-31.map
snowFreeWaterIni = global_05min/initialConditions/snowFreeWater_irrNonPaddy_1999-12-31.map
topWaterLayerIni = global_05min/initialConditions/topWaterLayer_irrNonPaddy_1999-12-31.map
storUppIni       = global_05min/initialConditions/storUpp_irrNonPaddy_1999-12-31.map
storLowIni       = global_05min/initialConditions/storLow_irrNonPaddy_1999-12-31.map
interflowIni     = global_05min/initialConditions/interflow_irrNonPaddy_1999-12-31.map




[groundwaterOptions]

debugWaterBalance = True

coupleToDailyMODFLOW = True

# basic groundwater properties
groundwaterPropertiesNC = global_05min/groundwater/properties/groundwaterProperties5ArcMin.nc
# The groundwaterPropertiesNC file will contain specificYield (m3.m-3), kSatAquifer (m.day-1), and recessionCoeff (day-1).
# - minimum value for groundwater recession coefficient (day-1) 
minRecessionCoeff = 1.0e-4

# river bed properties - optional
# - river bed conductivity (m.day-1) ; the default value is taken from kSatAquifer
riverBedConductivity = Default
# - river bed thickness (m) ; the default value is 0.1 m
riverBedThickness    = 0.1
# - minimum river bed resistance (day) ; the default value is 1 day
minimumBedResistance = 1.0

# some options for constraining groundwater abstraction
#~ limitFossilGroundWaterAbstraction      = True
#~ estimateOfRenewableGroundwaterCapacity = 0.0
# - For run with MODFLOW, the concept of fossil groundwater abstraction is not used/valid. Hence, limitFossilGroundWaterAbstraction is not used.  
#
estimateOfTotalGroundwaterThickness    = global_05min/groundwater/aquifer_thickness_estimate/thickness_05min.map
# minimum and maximum total groundwater thickness 
minimumTotalGroundwaterThickness       = 50.
maximumTotalGroundwaterThickness       = 1000.

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
pumpingCapacityNC = global_30min/waterUse/groundwater_pumping_capacity/regional_abstraction_limit.nc

# initial conditions:
storGroundwaterFossilIni                  = 0.0
#
# additional initial conditions for pumping behaviors
avgNonFossilGroundwaterAllocationLongIni  = global_05min/initialConditions/avgNonFossilGroundwaterAllocationLong_1999-12-31.map
avgNonFossilGroundwaterAllocationShortIni = global_05min/initialConditions/avgNonFossilGroundwaterAllocationShort_1999-12-31.map
avgTotalGroundwaterAbstractionIni         = global_05min/initialConditions/avgTotalGroundwaterAbstraction_1999-12-31.map
avgTotalGroundwaterAllocationLongIni      = global_05min/initialConditions/avgTotalGroundwaterAllocationLong_1999-12-31.map
avgTotalGroundwaterAllocationShortIni     = global_05min/initialConditions/avgTotalGroundwaterAllocationShort_1999-12-31.map
#
# additional initial conditions (needed only for MODFLOW run) 
storGroundwaterIni                        = global_05min/initialConditions/storGroundwater_1999-12-31.map
relativeGroundwaterHeadIni                = global_05min/initialConditions/relativeGroundwaterHead_1999-12-31.map
baseflowIni                               = global_05min/initialConditions/baseflow_1999-12-31.map

# zonal IDs (scale) at which zonal allocation of groundwater is performed  
allocationSegmentsForGroundwater = global_05min/waterUse/abstraction_zones/abstraction_zones_30min_05min.map

# assumption for the minimum transmissivity value (unit: m2/day) that can be extracted (via capillary rise and/or groundwater abstraction) - optional
minimumTransmissivityForProductiveAquifer = 50.0
# - if None, abstraction and/or capillary rise can always occur everywhere and unlimited

#~ # an option to limit recharge in built-up_area
#~ nc_file_for_built_up_area_correction_for_recharge = /projects/0/dfguu/users/rens/data/GLO/Vegetation/Reference/fraction_urban_historical_1970-2010.nc

# output files that will be written in the disk in netcdf files:
outDailyTotNC = groundwaterHeadLayer1,groundwaterHeadLayer2
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None


[modflowParameterOptions]

# number of modflow layers:
number_of_layers = 2

# Total thickness of groundwater (from both layers) is defined in the section "groundwaterOptions".

# The default values for aquifer properties (i.e. conductivities and storage coefficients) are defined in the field "groundwaterPropertiesNC" of the section "groundwaterOptions". Yet, these default values can be overwritten by setting the following information. 

# confining layer (deklaag) properties (thickness in meter, conductivity in m/day, resistance in day) 
#
# - confining layer thickness
usePreDefinedConfiningLayer               = True
confiningLayerThickness                   = /projects/0/dfguu/users/edwin/data/inge_confining_layer_parameters/confining_layer_thickness_edwin.map
# * TODO: Shall we remove the "usePreDefinedConfiningLayer" option. It seems that this must always be True.  
#
# - confining layer horizontal conductivity (m/day)
confiningLayerHorizontalConductivity      = Default
# * If Default (or not defined), the default values from the field of "groundwaterPropertiesNC" of the section "groundwaterOptions" will be used. 
#
# - confining layer vertical conductivity (m/day)
confiningLayerVerticalConductivity        = Default
maximumConfiningLayerVerticalConductivity = 0.0008
#
# - resistance (day) 
# * By default, the resistance (1/VCONT) between two layers equals to confiningLayerThickness (m) / confiningLayerVerticalConductivity (m.day-1)
# * Yet, we can limit this field with the following the maximum value (day):
maximumConfiningLayerResistance           = 30000.
# 
# - primary storage coefficient (dimensionless)
confiningLayerPrimaryStorageCoefficient   = Default
# TODO: Define confiningLayerSecondaryStorageCoefficient so that we can use the layer type (LAYCON) 3. Note that for this layer type, storage coefficient values may alter from their primary to the secondary ones (and vice versa) and transmissivities vary depending on saturation thicknesses. A cell may be desaturated and even dry if its saturation thickness is zero.

# aquifer layer properties
# 
# - aquifer layer horizontal conductivity (m/day)
aquiferLayerHorizontalConductivity        = Default
# * If Default (or not defined), the default values from the field of "groundwaterPropertiesNC" of the section "groundwaterOptions" will be used. 
# 
# - primary storage coefficient (dimensionless)
#~ aquiferLayerPrimaryStorageCoefficient  = Default
#~ # * If Default (or not defined), the default values from the field of "groundwaterPropertiesNC" of the section "groundwaterOptions" will be used. 
aquiferLayerPrimaryStorageCoefficient     = 0.001
# TODO: Define confiningLayerSecondaryStorageCoefficient so that we can use the layer type (LAYCON) 2. Note that for this layer type, storage coefficient values may alter from their primary to the secondary ones (and vice versa), but transmissivities constantly based on the layer thickness. 
# 
# - PS: The thickness of aquifer layer is totalGroundwaterThickness - confiningLayerThickness


# general rule for minimum and maximum values for transmissivities (unit: m/day)
minimumTransmissivity = 10.0
maximumTransmissivity = 2000.

# elevation/topographical parameters, e.g. average DEM and minimum DEM within a cell
topographyNC = /projects/0/dfguu/users/edwin/data/floodplain_05arcmin_world_final/based_on_daily_runoff/topography_parameters_5_arcmin_october_2015.nc


# channel/routing parameters (these input values/files would be used to convert discharge to surface water elevation, based on Manning's equation) 
#
channelNC    = /projects/0/dfguu/users/edwin/data/floodplain_05arcmin_world_final/based_on_daily_runoff/channel_parameters_5_arcmin_october_2015.nc
#
# - the manning coefficient used for converting discharge values to surface water elevation values
manningsN = 0.04
#
# - minimum channel gradient (m.m-1, optional) - this is recommended to avoid too high surface water level
minimumChannelGradient = 0.00005
# - minimum channel width (m, optional) - this is recommended, not only to avoid too high surface water level, but also to set minimum river bed conductance 
minimumChannelWidth    = 5.0 
#
# - lakes and reservoir parameters
onlyNaturalWaterBodies = False
waterBodyInputNC       = global_05min/routing/surface_water_bodies/waterBodies5ArcMin.nc


#~ # assumption for the thickness/depth (m) of accessible groundwater (needed only for online coupling to PCR-GLOBWB)  
#~ accessibleDepth = 1000.

#~ # option to ignore negative capillary rise during MODFLOW simulation
#~ ignoreCapRise = True

#~ # pre-factors to adjust several values:
#~ linear_multiplier_for_storage_coefficients    = 1.0
#~ log_10_multiplier_for_transmissivities        = 0.0
#~ linear_multiplier_for_groundwater_recharge    = 1.0
#~ linear_multiplier_for_groundwater_abstraction = 1.0
#~ 
#~ # pre-factor to include aquitards
#~ log_10_multiplier_for_resistance_values       = 0.0
#~ log_10_multiplier_for_resistance_values       = 0.69897


# some parameters for the PCG solver (optional)
DAMP              = 1.00,0.75
DAMP_steady_state = 0.75,0.60


[modflowTransientInputOptions]

# the following is None for an online coupling between PCR-GLOBWB and MODFLOW
dischargeInputNC               = None
groundwaterRechargeInputNC     = None
groundwaterAbstractionInputNC  = None
channelStorageInputNC          = None

usingPredefinedInitialHead = True
# - if False, the initial groundwater head(s) will be based on the steady state simulation using the input defined in modflowSteadyStateInputOptions 
# - if True , the following initial conditions of the groundwater head will be based on the steady state simulation using the input defined in modflowSteadyStateInputOptions 
# - Note: For the online coupling PCR-GLOBWB-MODFLOW, we have to first define the initial conditions of groundwater head (usingPredefinedInitialHead = True)

#~ # initial conditions for groundwater head (unit: m)
#~ groundwaterHeadLayer1Ini = /projects/0/dfguu/users/edwinhs/data/initial_conditions/05min/2017_08_XX_with_modflow/modflow/states/groundwaterHeadLayer1_1999-12-31.map
#~ groundwaterHeadLayer2Ini = /projects/0/dfguu/users/edwinhs/data/initial_conditions/05min/2017_08_XX_with_modflow/modflow/states/groundwaterHeadLayer2_1999-12-31.map

# initial conditions for groundwater head (unit: m)
groundwaterHeadLayer1Ini = /scratch-shared/edwinhs/test_for_jannis_with_modflow/java--spin-up/netcdf/groundwaterHeadLayer1_dailyTot_2000_12_31.map
groundwaterHeadLayer2Ini = /scratch-shared/edwinhs/test_for_jannis_with_modflow/java--spin-up/netcdf/groundwaterHeadLayer2_dailyTot_2000_12_31.map


#~ [modflowSteadyStateInputOptions]
#~ 
#~ # The following input maps used for the steady state run 
#~ # - average discharge (unit: m3/s)
#~ avgDischargeInputMap              = /scratch-shared/edwinhs/runs_2017_july_aug_finalizing_4LCs/05min_runs/05min_runs_4LCs_accutraveltime_cru-forcing_1958-2015/natural_spin-up_with_reservoirs_with_estimate_of_storGroundwater_continue/global/netcdf/steady-state_estimates/discharge_annuaAvg_output_2100-12-31_to_2100-12-31.map
#~ 
#~ # - average groundwater recharge (unit: m/day)
#~ avgGroundwaterRechargeInputMap    = /scratch-shared/edwinhs/runs_2017_july_aug_finalizing_4LCs/05min_runs/05min_runs_4LCs_accutraveltime_cru-forcing_1958-2015/natural_spin-up_with_reservoirs_with_estimate_of_storGroundwater_continue/global/netcdf/steady-state_estimates/gwRecharge_annuaAvg_output_2100-12-31_to_2100-12-31.map
#~ 
#~ # - average groundwater abstraction (unit: m/day)
#~ avgGroundwaterAbstractionInputMap = 0.0
#~ 
#~ # - average channel storage (unit: m3) - optional
#~ avgChannelStorageInputMap         = /scratch-shared/edwinhs/runs_2017_july_aug_finalizing_4LCs/05min_runs/05min_runs_4LCs_accutraveltime_cru-forcing_1958-2015/natural_spin-up_with_reservoirs_with_estimate_of_storGroundwater_continue/global/netcdf/steady-state_estimates/channelStorage_annuaAvg_output_2100.map
#~ 
#~ # initial estimate for groundwater head (unit: m)
#~ usingInitialHeadEstimate = False
#~ groundwaterHeadLayer1Estimate = None
#~ groundwaterHeadLayer2Estimate = None



[routingOptions]

debugWaterBalance = True

# drainage direction map
lddMap      = global_05min/routing/ldd_and_cell_area/lddsound_05min.map

# cell area (unit: m2)
cellAreaMap = global_05min/routing/ldd_and_cell_area/cellsize05min.correct.map

#~ # routing method:
#~ routingMethod = accuTravelTime
routingMethod    = kinematicWave

# manning coefficient
manningsN   = 0.04

# Option for flood plain simulation
dynamicFloodPlain = True

# manning coefficient for floodplain
floodplainManningsN = 0.07


# channel gradient
gradient             = global_05min/routing/channel_properties/channel_gradient.map

# constant channel depth 
constantChannelDepth = global_05min/routing/channel_properties/bankfull_depth.map

# constant channel width (optional)
constantChannelWidth = global_05min/routing/channel_properties/bankfull_width.map

# minimum channel width (optional)
minimumChannelWidth  = global_05min/routing/channel_properties/bankfull_width.map

# channel properties for flooding
bankfullCapacity     = None
# - If None, it will be estimated from (bankfull) channel depth (m) and width (m) 


# files for relative elevation (above minimum dem) 
relativeElevationFiles  = global_05min/routing/channel_properties/dzRel%04d.map
relativeElevationLevels = 0.0, 0.01, 0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.00


# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = global_30min/routing/kc_surface_water/cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00


# lake and reservoir parameters
waterBodyInputNC       = global_05min/routing/surface_water_bodies/waterBodies5ArcMin.nc
onlyNaturalWaterBodies = False


# initial conditions:
waterBodyStorageIni            = global_05min/initialConditions/waterBodyStorage_1999-12-31.map
channelStorageIni              = global_05min/initialConditions/channelStorage_1999-12-31.map
readAvlChannelStorageIni       = global_05min/initialConditions/readAvlChannelStorage_1999-12-31.map
avgDischargeLongIni            = global_05min/initialConditions/avgDischargeLong_1999-12-31.map
avgDischargeShortIni           = global_05min/initialConditions/avgDischargeShort_1999-12-31.map
m2tDischargeLongIni            = global_05min/initialConditions/m2tDischargeLong_1999-12-31.map
avgBaseflowLongIni             = global_05min/initialConditions/avgBaseflowLong_1999-12-31.map
riverbedExchangeIni            = global_05min/initialConditions/riverbedExchange_1999-12-31.map
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = global_05min/initialConditions/subDischarge_1999-12-31.map
#
avgLakeReservoirInflowShortIni = global_05min/initialConditions/avgLakeReservoirInflowShort_1999-12-31.map
avgLakeReservoirOutflowLongIni = global_05min/initialConditions/avgLakeReservoirOutflowLong_1999-12-31.map
#
# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = global_05min/initialConditions/timestepsToAvgDischarge_1999-12-31.map
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

#
# initial conditions (added during the work with Jannis)
dynamicFracWatIni        = 0.0
floodInundationVolumeIni = 0.0
dischargeIni             = global_05min/initialConditions/avgDischargeShort_1999-12-31.map

# output files that will be written in the disk in netcdf files:
outDailyTotNC = negative_channel_storage_in_meter
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None




[reportingOptions]

# output files that will be written in the disk in netcdf files:
# - daily resolution
#~ outDailyTotNC = discharge,channelStorage,floodVolume,openWaterEvap,infiltration
outDailyTotNC    = discharge,channelStorage,floodVolume,infiltration
# - monthly resolution
outMonthTotNC = totalEvaporation,precipitation,gwRecharge,totalRunoff,totalGroundwaterAbstraction,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction
outMonthAvgNC = discharge,temperature,surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage
outMonthEndNC = storGroundwater,storGroundwaterFossil,waterBodyStorage,channelStorage,totalWaterStorageThickness
# - annual resolution
outAnnuaTotNC = totalEvaporation,precipitation,gwRecharge,totalRunoff,totalGroundwaterAbstraction,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction
outAnnuaAvgNC = discharge,temperature,surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage
outAnnuaEndNC = surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness
# - monthly and annual maxima
outMonthMaxNC = None
outAnnuaMaxNC = None

# netcdf format and zlib setup
formatNetCDF = NETCDF4
zlib = True



